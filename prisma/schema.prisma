generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  languages         String[]
  followers         Int?
  totalStars        Int?
  totalForks        Int?
  totalPullReqs     Int?
  totalCommits      Int?
  totalIssueContrib Int?
  totalRepoContrib  Int?

  bio String? @db.Text
  domains String[]

  accounts         Account[]
  sessions         Session[]
  messagesSent     Message[] @relation(name: "sender")
  messagesReceived Message[] @relation(name: "recver")

  @@map(name: "users")
}

model Message {
  id        String   @id @default(uuid())
  message   String
  authorId  String?
  recverId  String?
  email     String?
  createdAt DateTime @default(now())

  author User? @relation(name: "sender", fields: [authorId], references: [id])
  recver User? @relation(name: "recver", fields: [recverId], references: [id])

  @@map(name: "messages")
}
